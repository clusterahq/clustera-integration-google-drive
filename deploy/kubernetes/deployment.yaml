apiVersion: apps/v1
kind: Deployment
metadata:
  name: google-drive-worker
  namespace: integrations
  labels:
    app: google-drive-worker
    version: v1.0.0
    component: integration-worker
    provider: google-drive
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: google-drive-worker
  template:
    metadata:
      labels:
        app: google-drive-worker
        version: v1.0.0
        component: integration-worker
        provider: google-drive
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: google-drive-worker
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: worker
        image: clusterahq/google-drive-worker:latest
        imagePullPolicy: Always
        env:
        # Kafka Configuration
        - name: KAFKA_BOOTSTRAP_SERVERS
          value: "kafka-broker-1.kafka:9092,kafka-broker-2.kafka:9092,kafka-broker-3.kafka:9092"
        - name: KAFKA_CONSUMER_GROUP_ID
          value: "google-drive-worker"
        - name: KAFKA_AUTO_OFFSET_RESET
          value: "latest"
        - name: KAFKA_ENABLE_AUTO_COMMIT
          value: "false"
        - name: KAFKA_MAX_POLL_INTERVAL_MS
          value: "300000"
        - name: KAFKA_SESSION_TIMEOUT_MS
          value: "30000"
        - name: KAFKA_MAX_POLL_RECORDS
          value: "100"

        # Worker Configuration
        - name: WORKER_INTEGRATION_ID
          value: "google-drive"
        - name: WORKER_MAX_CONCURRENT_CONNECTIONS
          value: "10"
        - name: WORKER_S3_PAYLOAD_THRESHOLD_BYTES
          value: "262144"
        - name: WORKER_IDEMPOTENCY_CACHE_SIZE
          value: "10000"
        - name: WORKER_IDEMPOTENCY_CACHE_TTL_SECONDS
          value: "86400"

        # Google Drive API Configuration
        - name: GDRIVE_API_BASE_URL
          value: "https://www.googleapis.com/drive/v3"
        - name: GDRIVE_PAGE_SIZE
          value: "100"
        - name: GDRIVE_INCLUDE_SHARED_DRIVES
          value: "true"
        - name: GDRIVE_API_RATE_LIMIT
          value: "10"
        - name: GDRIVE_API_RATE_WINDOW
          value: "1"

        # Logging Configuration
        - name: LOG_LEVEL
          value: "INFO"
        - name: LOG_FORMAT
          value: "json"

        # Control Plane Configuration
        - name: CONTROL_PLANE_BASE_URL
          valueFrom:
            configMapKeyRef:
              name: google-drive-worker-config
              key: control_plane_base_url

        # S3 Configuration
        - name: S3_BUCKET_NAME
          valueFrom:
            secretKeyRef:
              name: google-drive-worker-secrets
              key: s3_bucket_name
        - name: S3_REGION
          valueFrom:
            configMapKeyRef:
              name: google-drive-worker-config
              key: s3_region
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: google-drive-worker-secrets
              key: aws_access_key_id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: google-drive-worker-secrets
              key: aws_secret_access_key

        # mTLS Certificates
        - name: TLS_CERT_PATH
          value: "/etc/certs/tls.crt"
        - name: TLS_KEY_PATH
          value: "/etc/certs/tls.key"
        - name: TLS_CA_PATH
          value: "/etc/certs/ca.crt"

        volumeMounts:
        - name: certs
          mountPath: /etc/certs
          readOnly: true
        - name: tmp
          mountPath: /tmp

        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"

        livenessProbe:
          exec:
            command:
            - python
            - -c
            - "import sys; import os; sys.exit(0 if os.path.exists('/tmp/healthy') else 1)"
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3

        readinessProbe:
          exec:
            command:
            - python
            - -c
            - "import sys; import os; sys.exit(0 if os.path.exists('/tmp/ready') else 1)"
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3

        startupProbe:
          exec:
            command:
            - python
            - -c
            - "import sys; sys.exit(0)"
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 12

      volumes:
      - name: certs
        secret:
          secretName: control-plane-mtls-certs
          defaultMode: 0400
      - name: tmp
        emptyDir: {}

      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - google-drive-worker
              topologyKey: kubernetes.io/hostname

      tolerations:
      - key: "node-role.kubernetes.io/worker"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"